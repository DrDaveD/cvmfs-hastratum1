#!/bin/bash
# Add a CVMFS repository to a dual-hosted stratum 1.
# This can be run on either host.
# Written by Dave Dykstra 20 June 2014

EXTRAKEYS=""
. /etc/cvmfs/hastratum1.conf

refreshcredentials()
{
    # large repos can take a long time, so refresh kerberos credentials
    #  if that is being used
    if [ ! -f /etc/krb5.keytab ]; then return; fi 
    export KRB5CCNAME=FILE:/tmp/krb5cc_root_hastratum1
    PATH=$PATH:/usr/krb5/bin:/usr/kerberos/bin kinit -k host/`uname -n`
}

usage()
{
    echo "Usage: add-repository fqrn {continue|http://stratum-zero-fqdn:port [sourcefqrn]}" >&2
    echo "If second parameter is "continue", continue from a failed snapshot" >&2
    exit 1
}

if [ $# != 2 ] && [ $# != 3 ]; then
    usage
fi

CREATEREPO=true
case "$2" in
    http://*);;
    continue)
	CREATEREPO=false;;
    *) usage;;
esac

if [ "`id -u`" != 0 ]; then
    echo "Not running as root" >&2
    exit 1
fi

REPO="$1"
URL="$2"
SOURCEREPO="$3"

SHORTREPO=""
case "$REPO" in
    *.cern.ch|*.opensciencegrid.org)
	SHORTREPO="${REPO%%.*}"
	;;
esac

DOMAIN="${REPO#*.}"
if [ -d /etc/cvmfs/keys/$DOMAIN ]; then
    KEYS="`echo /etc/cvmfs/keys/$DOMAIN/*.pub|tr ' ' ':'`"
elif [ -f /etc/cvmfs/keys/$DOMAIN.pub ]; then
    KEYS="`echo /etc/cvmfs/keys/*$DOMAIN.pub|tr ' ' ':'`"
else
    echo "$DOMAIN.pub not found in /etc/cvmfs/keys, aborting" >&2
    exit 1
fi

if [ -n "$EXTRAKEYS" ]; then
    case "$KEYS" in
	*"$EXTRAKEYS"*)
	    ;;
	*) KEYS="$KEYS:$EXTRAKEYS"
	    ;;
    esac
fi

THISHOST="`uname -n`"
case $THISHOST in
    $HOST1) OTHERHOST=$HOST2;;
    $HOST2) OTHERHOST=$HOST1;;
    *) echo "Not running on $HOST1 or $HOST2" >&2; exit 1;;
esac

REPOSTORE=$STORAGE/$REPO

set -e

refreshcredentials

if $CREATEREPO; then
    if [ -d "$REPOSTORE" ]; then
	echo "$REPOSTORE already exists" >&2
	exit 1
    fi
else
    if [ ! -d "$REPOSTORE" ]; then
	echo "$REPOSTORE does not exist, cannot continue" >&2
	exit 1
    fi
    if [ ! -f "$REPOSTORE/stage/.cvmfs_master_replica" ]; then
	echo "Creation of $REPO didn't finish, cannot continue" >&2
	exit 1
    fi
    if ! ssh $OTHERHOST test -f $REPOSTORE/stage/.cvmfs_master_replica; then
	echo "Creation of $REPO on $OTHERHOST didn't finish, cannot continue" >&2
	exit 1
    fi
    if [ -f "$REPOSTORE/.cvmfspublished" ]; then
	echo "Initial snapshot already done for $REPO, cannot continue" >&2
	exit 1
    fi
fi

set -x

if $CREATEREPO; then
    # this is first to allow remove-repository to run on either host even if 
    #  this command is aborted
    ssh $OTHERHOST mkdir -p $REPOSTORE

    mkdir -p $REPOSTORE/data $REPOSTORE/stage
    ln -s ../data $REPOSTORE/stage/data

    if [ -n "$SHORTREPO" ]; then
	ln -s $REPO $STORAGE/$SHORTREPO
	ssh $OTHERHOST ln -s $REPO $STORAGE/$SHORTREPO
    fi

    mkdir -p /srv/cvmfs
    ln -s $REPOSTORE/stage /srv/cvmfs/$REPO
    if [ -z "$SOURCEREPO" ]; then
	cvmfs_server add-replica -o root $URL/cvmfs/$REPO $KEYS
    else
	cvmfs_server add-replica -o root -n $REPO $URL/cvmfs/$SOURCEREPO $KEYS
    fi
    rm -f /etc/httpd/conf.d/cvmfs.$REPO.conf
    if [ "$SRV" != "/srv/cvmfs" ]; then
	mkdir -p $SRV
	mv /srv/cvmfs/$REPO $SRV
	sed -i "s,/srv/cvmfs/,$SRV/,g" /etc/cvmfs/repositories.d/$REPO/server.conf
	if [ -L /var/spool/cvmfs/$REPO/tmp ]; then
	    rm -f /var/spool/cvmfs/$REPO/tmp
	    ln -s $SRV/$REPO/data/txn /var/spool/cvmfs/$REPO/tmp
	fi
    fi

    rsync -a --delete $REPOSTORE/ $OTHERHOST:$REPOSTORE
    sed -i -e 's,^CVMFS_STRATUM1=\(.*\),CVMFS_STRATUM1=\1/stage,' \
      -e 's,^CVMFS_STRATUM0=\(.*\),CVMFS_STRATUM0=${CVMFS_SERVER_OVERRIDE:-\1},' \
      /etc/cvmfs/repositories.d/$REPO/server.conf
    rsync -a /etc/cvmfs/repositories.d/$REPO $OTHERHOST:/etc/cvmfs/repositories.d
    rsync -a /var/spool/cvmfs/$REPO $OTHERHOST:/var/spool/cvmfs
    ssh $OTHERHOST mkdir -p $SRV
    rsync -a $SRV/$REPO $OTHERHOST:$SRV

    # these have to be last because of "continue" test above
    touch $REPOSTORE/stage/.cvmfs_master_replica
    ssh $OTHERHOST touch $REPOSTORE/stage/.cvmfs_master_replica
fi

cvmfs_server snapshot $REPO

refreshcredentials

# comment out because rsync gets better throughput
#ssh $OTHERHOST CVMFS_SERVER_OVERRIDE=http://$THISHOST:8080/cvmfs/$REPO/stage cvmfs_server snapshot $REPO

# arcfour cipher greatly reduces ssh CPU, and so increases throughput
#  when CPU is the bottleneck
rsync -a -e 'ssh -c arcfour' $REPOSTORE/ $OTHERHOST:$REPOSTORE

refreshcredentials

EXCLUDES=" --exclude .cvmfs_master_replica --exclude data --exclude stage"
rsync -a $EXCLUDES $REPOSTORE/stage/ $REPOSTORE/
rsync -a $EXCLUDES $REPOSTORE/stage/ $OTHERHOST:$REPOSTORE/
